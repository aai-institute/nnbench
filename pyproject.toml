[build-system]
requires = ["setuptools>=45"]
build-backend = "setuptools.build_meta"

[project]
name = "nnbench"
description = "A small framework for benchmarking machine learning models."
keywords = ["Benchmarking", "Machine Learning"]
requires-python = ">=3.10"
license = { text = "Apache-2.0" }
authors = [{ name = "appliedAI Initiative", email = "info+oss@appliedai.de" }]
maintainers = [
    { name = "Nicholas Junge", email = "n.junge@appliedai-institute.de" },
    { name = "Max Mynter", email = "m.mynter@appliedai-institute.de" },
    { name = "Adrian Rumpold", email = "a.rumpold@appliedai-institute.de" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Benchmark",
    "Topic :: Utilities",
    "Typing :: Typed",
]

dependencies = [
    "rich",
    "tomli >= 1.1.0 ; python_version < '3.11'",
    "typing-extensions; python_version < '3.11'",
]

dynamic = ["readme", "version"]

[project.urls]
Homepage = "https://github.com/aai-institute/nnbench"
Repository = "https://github.com/aai-institute/nnbench.git"
Issues = "https://github.com/aai-institute/nnbench/issues"
Discussions = "https://github.com/aai-institute/nnbench/discussions"

[dependency-groups]
dev = [
    "build>=1.0.0",
    "fsspec",
    "numpy>=2.2.1",
    "pre-commit>=3.3.3",
    "psutil",
    "pyarrow",
    "pytest>=7.4.0",
    "pytest-memray; platform_system != 'Windows'",
]
docs = [
    "black",
    "docstring-parser",
    "mike",
    "mkdocs",
    "mkdocs-callouts",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-include-dir-to-nav",
    "neoteroi-mkdocs",
]

[project.scripts]
nnbench = "nnbench.cli:main"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.dynamic]
readme = { file = "README.md", content-type = "text/markdown" }
version = { attr = "nnbench.__version__" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
nnbench = ["py.typed"]

[tool.mypy]
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
pretty = true
python_version = "3.10"
strict_optional = false
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tabulate", "yaml", "fsspec"]
ignore_missing_imports = true

[tool.ruff]
# explicitly set src folder for isort to understand first-party imports correctly.
src = ["src"]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
# Enable pycodestyle errors & warnings (`E`, `W`), Pyflakes (`F`), isort (`I`),
#  and pyupgrade (`UP`) by default.
select = ["E", "F", "I", "W", "UP"]
ignore = [
    # Line too long
    "E501",
    # Allow capitalized variable names
    "F841",
]

[tool.ruff.lint.per-file-ignores]
# Ignore unused imports in all `__init__.py` files
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
